html body {
	/* GREY */
	--grey-slate: #303030;
	--grey-medium: #666;
	--grey-medium-light: #909090;

	/* Not accessible over white. */
	--grey-light: #eeeeee;
	--grey-very-light: #f3f3f3;

	/* Colors */
	--color-accent: #009bff;
	--color-accent-text: #ffffff;
	--color-background: #ffffff;
	--color-background-page: #444444;
	--color-screen-light: var(--grey-light);
	--s2-color-ad-wrapper: var(--color-background);
	--color-font: var(--grey-slate);
	--color-font-muted: var(--grey-medium);
	--color-font-very-muted: var(--grey-medium-light);

	/* Scaffoldinfg and spacing */
	--touch-target: 44px;

	/* Typography */
	--fonts-sans-serif: "Unify Sans", "Helvetica", "Arial", sans-serif;
	--fonts-serif: "Georgia Pro", Georgia, "Droid Serif", "Times New Roman", serif;

	--font-size-small: 0.7rem;
	--font-size: 1rem;
	--font-size-medium-large: 1.2rem;
	--font-size-large: 1.4rem;
	--font-size-very-large: 2rem;
	--font-line-height: 1.4em;

	/* UW FIX-ITS */
	--agent-nav-height: 56px;
	--font-color: var(--color-font) !important;
	--type-primary: var(--color-font) !important;
	--background-color: var(--color-background-page) !important;

	background-color: var(
		--color-background-page,
		var(--color-background, var(--background-color, white))
	) !important;
}

html body.scroll-lock {
	overflow: hidden;
}

.app p:not([class]) {
	/* All plain vanilla (i.e. unmodified with a class) p tags in the application root */
	font: 18px/27px var(--fonts-serif); /* Tangent body text */
	margin: 1rem 0;
	color: var(--color-font);
}
.ad-wrapper {
	margin-inline: auto;
}

/* Restoring some sanity to UW  */

html body .generic-content-container {
	background: unset;
}

#footer {
	background: inherit;
}

#footer .copyright,
#footer .footer-link.ot-sdk-show-settings,
#footer .footer-link a {
	color: var(--grey-very-light);
	text-align: center;
}

#footerButtons,
#footerContainer .footer-links {
	justify-content: center;
}

@media screen and (prefers-reduced-motion: no-preference) {
	/* ---- RING ---------------------------- */
	.ring {
		--duration: 2s;
		transform-style: preserve-3d;
	}
	.ring::after,
	.ring::before {
		content: "";
		display: block;
		border: 1px solid var(--color-accent);
		position: absolute;
		top: 50%;
		left: 50%;
		/* TranslateZ used here to nudge the rings behind the button. Z-index won't work here b/c of stacking context being reset by position: relative in the container */
		transform: translate(-50%, -50%) scale(0) translateZ(-1px);
		transform-origin: center;
		border-radius: 50%;
		width: 100px;
		height: 100px;
		/* animation: ring var(--duration) ease-in-out infinite; */
		animation: ring var(--duration) infinite;
		animation-delay: 10ms;
		animation-fill-mode: forwards;
	}
	.ring::after {
		animation-delay: calc(var(--duration) * 0.33);
	}
}

@media all and (min-width: 768px) {
	html body {
		--font-size-small: 0.85rem;
	}
}

@keyframes ring {
	from {
		transform: translate(-50%, -50%) scale(0) translateZ(-1px);
		opacity: 0;
	}
	60% {
		opacity: 1;
	}
	100% {
		transform: translate(-50%, -50%) scale(1.75) translateZ(-1px);
		opacity: 0;
	}
}
